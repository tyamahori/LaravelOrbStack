name: test

on: push

jobs:
  lint-devbox:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install devbox
        uses: jetify-com/devbox-install-action@v0.11.0
        with:
          enable-cache: 'true'
      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3
      - name: Run arbitrary commands
        run: devbox run -- which php && php -v && composer -v
  build:
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    runs-on: ubuntu-latest
    steps:
      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3
      - name: Checkout
        uses: actions/checkout@v4
#      - uses: dorny/paths-filter@v3
#        id: changes
#        with:
#          filters:
      - name: Check Docker Image Cache
        uses: ScribeMD/docker-cache@0.5.0
        id: docker-cache
        with:
          key: docker-${{ runner.os }}-${{ hashFiles('./.docker/php.Dockerfile') }}-${{ hashFiles('./.docker/compose.yaml') }}
      - if: steps.docker-cache.outputs.cache-hit != 'true'
        name: Cache Docker Image
        run: task pullImages buildPhpImage -- ci

  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache Docker images
        uses: ScribeMD/docker-cache@0.3.7
        with:
          key: docker-${{ runner.os }}-${{ hashFiles('./.docker/php.Dockerfile') }}-${{ hashFiles('./.docker/compose.yaml') }}
      - name: Setup
        run: task upOnCI
      - name: Rector
        run: |
          task rectorDryRun
      - name: Stan
        run: |
          task stan
      - name: Ecs
        run: |
          task ecs

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache Docker images
        uses: ScribeMD/docker-cache@0.3.7
        with:
          key: docker-${{ runner.os }}-${{ hashFiles('./.docker/php.Dockerfile') }}-${{ hashFiles('./.docker/compose.yaml') }}
      - name: Setup
        run: task upOnCI
      - name: test
        run: task phpunit
