name: test

on: push

jobs:
  cache:
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Get PHP version
        id: php-version
        run: |
          echo "PHP_VERSION=`jq -r '.config.platform.php' composer.json`" >> $GITHUB_ENV
      - name: Setup PHP
        uses: shivammathur/setup-php@bf6b4fbd49ca58e4608c9c89fba0b8d90bd2a39f # v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          tools: composer:v2
      - name: Restore Composer packages
        uses: actions/cache/restore@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: vendor
          key: composer-cache-${{ runner.os }}-${{ hashFiles('composer.lock') }}
          restore-keys: |
            composer-cache-${{ runner.os }}-${{ hashFiles('composer.lock') }}
            composer-cache-${{ runner.os }}-
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest
      - name: Save Composer packages
        id: cache-composer
        uses: actions/cache/save@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: vendor
          key: composer-cache-${{ runner.os }}-${{ hashFiles('composer.lock') }}

  build:
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-build
      cancel-in-progress: true
    runs-on: ubuntu-24.04-arm
    needs: cache
    steps:
      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
#      - uses: dorny/paths-filter@v3
#        id: changes
#        with:
#          filters:
      - name: Check Docker Image Cache
        # uses: ScribeMD/docker-cache@0.5.0
        uses: AndreKurait/docker-cache  @0fe76702a40db986d9663c24954fc14c6a6031b7 # 0.6.0
        id: docker-cache
        with:
          key: docker-${{ runner.os }}-${{ hashFiles('./.docker/compose.ci.yaml') }}
      - if: steps.docker-cache.outputs.cache-hit != 'true'
        name: Cache Docker Image
        run: task pullCiImages

  lint:
    runs-on: ubuntu-24.04-arm
    needs: cache
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Restore Composer packages
        uses: actions/cache/restore@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: vendor
          key: composer-cache-${{ runner.os }}-${{ hashFiles('composer.lock') }}
          restore-keys: |
            composer-cache-${{ runner.os }}-${{ hashFiles('composer.lock') }}
            composer-cache-${{ runner.os }}-
      - name: Get PHP version
        id: php-version
        run: |
          echo "PHP_VERSION=`jq -r '.config.platform.php' composer.json`" >> $GITHUB_ENV
      - name: Setup PHP
        uses: shivammathur/setup-php@bf6b4fbd49ca58e4608c9c89fba0b8d90bd2a39f # v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          tools: composer:v2
      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-progress --no-suggest
      - name: Restore Rector cache
        uses: actions/cache/restore@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: .tempCache/.rector
          key: rector-cache-${{ runner.os }}-${{ github.run_id }}
          restore-keys: |
            rector-cache-${{ runner.os }}-${{ github.run_id }}
            rector-cache-${{ runner.os }}-
      - name: Rector
        run: |
          composer rectorCheck
      - name: Cache .rector
        uses: actions/cache/save@0057852bfaa89a56745cba8c7296529d2fc39830 # v4
        with:
          path: .tempCache/.rector
          key: rector-cache-${{ runner.os }}-${{ github.run_id }}
      - name: Restore Stan cache
        uses: actions/cache/restore@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: .tempCache/.stan
          key: stan-cache-${{ runner.os }}-${{ github.run_id }}
          restore-keys: |
            stan-cache-${{ runner.os }}-${{ github.run_id }}
            stan-cache-${{ runner.os }}-
      - name: Stan
        run: |
          composer stanCheck
      - name: Cache .stan
        uses: actions/cache/save@0057852bfaa89a56745cba8c7296529d2fc39830 # v4
        with:
          path: .tempCache/.stan
          key: stan-cache-${{ runner.os }}-${{ github.run_id }}
      - name: Restore Ecs cache
        uses: actions/cache/restore@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: .tempCache/.ecs
          key: ecs-cache-${{ runner.os }}-${{ github.run_id }}
          restore-keys: |
            ecs-cache-${{ runner.os }}-${{ github.run_id }}
            ecs-cache-${{ runner.os }}-
      - name: Ecs
        run: |
          composer ecsCheck
      - name: Cache .ecs
        uses: actions/cache/save@0057852bfaa89a56745cba8c7296529d2fc39830 # v4
        with:
          path: .tempCache/.ecs
          key: ecs-cache-${{ runner.os }}-${{ github.run_id }}
  test:
    runs-on: ubuntu-24.04-arm
    needs: build
    steps:
      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Cache Docker images
        # uses: ScribeMD/docker-cache@0.5.0
        uses: AndreKurait/docker-cache@0fe76702a40db986d9663c24954fc14c6a6031b7 # 0.6.0
        with:
          key: docker-${{ runner.os }}-${{ hashFiles('./.docker/compose.ci.yaml') }}
      - name: Restore Composer packages
        uses: actions/cache/restore@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: vendor
          key: composer-cache-${{ runner.os }}-${{ hashFiles('composer.lock') }}
          restore-keys: |
            composer-cache-${{ runner.os }}-${{ hashFiles('composer.lock') }}
            composer-cache-${{ runner.os }}-
      - name: Get PHP version
        id: php-version
        run: |
          echo "PHP_VERSION=`jq -r '.config.platform.php' composer.json`" >> $GITHUB_ENV
      - name: Setup PHP
        uses: shivammathur/setup-php@bf6b4fbd49ca58e4608c9c89fba0b8d90bd2a39f # v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          tools: composer:v2
      - name: Setup
        run: |
          cp .docker/local/php/.env.ci.testing .env
          task upOnCI
      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-progress --no-suggest
      - name: test
        run: composer phpunit
