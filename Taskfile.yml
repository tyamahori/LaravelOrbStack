version: '3'
vars:
  USER_NAME:
    sh: whoami
  USER_ID:
    sh: id -u
  GROUP_ID:
    sh: id -g
  BASE_COMMAND:
    USER_ID={{ .USER_ID }} GROUP_ID={{ .GROUP_ID }} USER_NAME={{ .USER_NAME }} docker compose -f .docker/local/compose.yaml
silent: true

tasks:
  default:
    cmds:
      - echo Welcome to LaravelOrbStack Project!! {{ .USER_NAME }}
  info:
    cmds:
      - echo {{ .USER_NAME }}
  removeVendor:
    cmd: rm -rf ./vendor
  cleanUp:
    cmds:
      - cmd: "{{ .BASE_COMMAND }} --profile '*' down -v --rmi all --remove-orphans"
  build:
    cmd: "{{ .BASE_COMMAND }} build"
  init:
    silent: false
    deps:
      - task: cleanUp
      - task: build
      - task: up
    cmds:
      - "{{ .BASE_COMMAND }} run --rm minio-bucket"
      - "{{ .BASE_COMMAND }} exec -it php-cli composer install"
      - "{{ .BASE_COMMAND }} exec -it php-cli php artisan optimize:clear"
      - "{{ .BASE_COMMAND }} exec -it php-cli php artisan migrate:refresh --seed"
      - "{{ .BASE_COMMAND }} exec -it php-cli composer ide-helper"
  up:
    deps:
      - down
    cmds:
      - "{{ .BASE_COMMAND }} up -d"
      - task: ps
  down:
    cmds:
      - "{{ .BASE_COMMAND }} down"
      - task: ps
  logs:
    cmds:
      - "{{ .BASE_COMMAND }} logs -f"
  ps:
    cmds:
      - "{{ .BASE_COMMAND }} ps -a"
  deleteVolume:
    cmds:
      - "{{ .BASE_COMMAND }} down -v"
  exec-php-app-as-user:
    cmd: "{{ .BASE_COMMAND }} exec -it php-app bash"
  exec-php-franken-as-user:
    cmd: "{{ .BASE_COMMAND }} exec -it php-franken bash"
  exec-php-app-as-root:
    cmd: "{{ .BASE_COMMAND }} exec -u root -it php-app bash"
  exec-php-franken-as-root:
    cmd: "{{ .BASE_COMMAND }} exec -u root -it php-franken bash"
  composer:
    sources:
      - ./**/*.php
      - ./composer.json
      - ./composer.lock
      - exclude: ./.rector
      - exclude: ./.stan
      - exclude: ./.php-cs.fixer.cache
      - exclude: ./vendor
    cmds:
      - "{{ .BASE_COMMAND }} run --rm php-cli composer install"
  composerUpdate:
    cmds:
      - "{{ .BASE_COMMAND }} run --rm php-cli composer update"
  fixer:
    sources:
      - ./**/*.php
      - exclude: .rector
      - exclude: .stan
      - exclude: .php-cs.fixer.cache
    cmds:
      - "{{ .BASE_COMMAND }} run --rm php-cli ./vendor/bin/php-cs-fixer fix --config=.php-cs-fixer.dist.php"
  stan:
    sources:
      - ./**/*.php
      - exclude: .rector
      - exclude: .stan
      - exclude: .php-cs.fixer.cache
    cmds:
      - "{{ .BASE_COMMAND }} run --rm php-cli ./vendor/bin/phpstan"
  rector:
    sources:
      - ./**/*.php
      - exclude: ./.rector
      - exclude: ./.stan
      - exclude: ./.php-cs.fixer.cache
      - exclude: ./vendor
    cmd: "{{ .BASE_COMMAND }} run --rm php-cli ./vendor/bin/rector"
  ide-helper:
    deps:
      - task: composer
    sources:
      - ./**/*.php
    cmd: "{{ .BASE_COMMAND }} run --rm php-cli composer ide-helper"
  bucket:
    sources:
      - '**/*.*'
    cmds:
      - "{{ .BASE_COMMAND }} run --rm minio-bucket"
  fixerOnSave:
    silent: false
    requires:
      vars: [ CLI_ARGS ]
    cmds:
      - cmd: "{{ .BASE_COMMAND }} run --rm php-cli ./vendor/bin/php-cs-fixer fix --config=.php-cs-fixer.dist.php --path-mode=intersection {{ .CLI_ARGS }}"
  stanOnSave:
    silent: false
    requires:
      vars: [ CLI_ARGS ]
    cmds:
      - cmd: "{{ .BASE_COMMAND }} run --rm php-cli ./vendor/bin/phpstan analyse -c phpstan.neon {{ .CLI_ARGS }} --memory-limit=1G"
  onSavePHP:
    silent: false
    deps:
      - fixerOnSave
      - stanOnSave
  lint:
    silent: false
    sources:
      - ./**/*.php
    deps:
      - fixer
      - rector
      - stan
