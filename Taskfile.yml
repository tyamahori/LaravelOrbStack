version: '3'
silent: false
vars:
  COMPOSE_FILE_PATH: .docker/compose.yaml
  CI_COMPOSE_FILE_PATH: .docker/compose.ci.yaml

  PHP_APACHE_DOCKERFILE_PATH: .docker/php.apache.Dockerfile
  PHP_FRANKEN_DOCKERFILE_PATH: .docker/php.franken.Dockerfile

  PHP_TAG: laravelorbstack/php-apache:8.4

  BASE_COMMAND: docker compose -f {{ .COMPOSE_FILE_PATH }}
  CI_BASE_COMMAND: docker compose -f {{ .CI_COMPOSE_FILE_PATH }}

  USER_NAME:
    sh: whoami
  USER_ID:
    sh: id -u
  GROUP_ID:
    sh: id -g
  SSH_PATH: .ssh
  APACHE_SERVICE: php-app
  FRANKEN_SERVICE: php-franken

tasks:
  default:
    cmds:
      - echo Welcome to LaravelOrbStack Project!! {{ .USER_NAME }}
  info:
    cmds:
      - echo {{ .USER_NAME }}
  removeVendor:
    cmd: rm -rf ./vendor
  buildBaseApacheModPhp:
    requires:
      vars: [ CLI_ARGS ]
    cmd: |
      docker build \
        -t laravelorbstack/php:apache-8.4-base \
        -f {{ .PHP_APACHE_DOCKERFILE_PATH }} \
        --target=basebuild \
        .
  buildBaseFrankenPhp:
    requires:
      vars: [ CLI_ARGS ]
    cmd: |
      docker build \
        -t laravelorbstack/php:franken-8.4-base \
        -f {{ .PHP_FRANKEN_DOCKERFILE_PATH }} \
        --target=basebuild \
        .
  buildBaseImages:
    deps:
      - task: buildBaseApacheModPhp
      - task: buildBaseFrankenPhp
  buildLocalApacheModPhp:
    requires:
      vars: [ CLI_ARGS ]
    deps:
      - task: buildBaseApacheModPhp
    cmd: |
      docker build \
        -t laravelorbstack/php:apache-8.4-local \
        -f {{ .PHP_APACHE_DOCKERFILE_PATH }} \
        --target=local \
        --build-arg USER_ID={{ .USER_ID }} \
        --build-arg GROUP_ID={{ .GROUP_ID }} \
        --build-arg USER_NAME={{ .USER_NAME }} \
        .
  buildLocalFrankenPhp:
    requires:
      vars: [ CLI_ARGS ]
    deps:
      - task: buildBaseFrankenPhp
    cmd: |
      docker build \
        -t laravelorbstack/php:franken-8.4-local \
        -f {{ .PHP_FRANKEN_DOCKERFILE_PATH }} \
        --target=local \
        --build-arg USER_ID={{ .USER_ID }} \
        --build-arg GROUP_ID={{ .GROUP_ID }} \
        --build-arg USER_NAME={{ .USER_NAME }} \
        .

  buildLocalPhps:
    deps:
      - buildLocalApacheModPhp
      - buildLocalFrankenPhp

  pullImages:
    cmd: "{{ .BASE_COMMAND }} pull balancer session cache mail mysql postgresql storage setUpStorage"
  pullCiImages:
    cmd: "{{ .CI_BASE_COMMAND }} --profile '*' pull"
  cleanUpComposeProject:
    cmds:
      - task: removeVendor
      - cmd: "{{ .BASE_COMMAND }} --profile '*' down -v --remove-orphans --rmi all"
  cleanUpComposeProjectVolumes:
    cmds:
      - task: removeVendor
      - cmd: "{{ .BASE_COMMAND }} --profile '*' down -v --remove-orphans"
  cleanUpComposeProjectImages:
    cmds:
      - task: removeVendor
      - cmd: "{{ .BASE_COMMAND }} --profile '*' down --remove-orphans --rmi all"
  buildImages:
    deps:
      - task: buildLocalApacheModPhp
      - task: buildLocalFrankenPhp
      - task: pullImages
    cmds:
      - task: images
  ps:
    cmds:
      - "{{ .BASE_COMMAND }} ps -a"
  init:
    deps:
      - task: cleanUpComposeProject
    cmds:
      - task: buildImages
      - task: up
      - task: bucket
      - |
        {{ .BASE_COMMAND }} exec -it  {{ .APACHE_SERVICE }} sh -c '
          composer install && \
          php artisan optimize:clear  && \
          php artisan migrate:refresh --seed && \
          composer ide-helper && \
          php -v && php artisan -V && whoami && pwd
        '
  start:
    deps:
      - task: cleanUpComposeProjectVolumes
    cmds:
      - task: up
      - task: bucket
      - |
        {{ .BASE_COMMAND }} exec -it  {{ .APACHE_SERVICE }} sh -c '
          composer install && \
          php artisan optimize:clear  && \
          php artisan migrate:refresh --seed && \
          composer ide-helper && \
          php -v && php artisan -V && whoami && pwd
        '
  images:
    cmds:
      - "docker images"
  upOnCI:
    cmds:
      - "{{ .CI_BASE_COMMAND }} --profile 'app' --profile '' up -d"
      - "{{ .CI_BASE_COMMAND }} run --rm setUpStorage"
      - |
        composer install && \
        php artisan optimize:clear  && \
        php artisan migrate:refresh --seed && \
        composer ide-helper && \
        php -v && php artisan -V && whoami && pwd
  down:
    cmds:
      - "{{ .BASE_COMMAND }} --profile '*' down --remove-orphans"
  up:
    deps:
      - task: down
    cmds:
      - "{{ .BASE_COMMAND }} --profile 'app' --profile '' up -d"
  logs:
    cmds:
      - "{{ .BASE_COMMAND }} --profile '*' logs -f"
  deleteVolume:
    cmds:
      - "{{ .BASE_COMMAND }} down -v"

  exec:apache:
    cmd: |
      {{ .BASE_COMMAND }} exec -u {{ .CLI_ARGS | default .USER_NAME }} -it {{ .APACHE_SERVICE }} bash

  exec:franken:
    cmd: |
      {{ .BASE_COMMAND }} exec -u {{ .CLI_ARGS | default .USER_NAME }} -it {{ .FRANKEN_SERVICE }} bash

  composer:
    sources:
      - ./composer.json
      - ./composer.lock
    generates:
      - ./vendor/composer/installed.json
      - ./vendor/autoload.php
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: composer {{ .CLI_ARGS | default "-V" }}
    status:
      - test -d ./vendor

  composerUpdate:
    deps:
      - task: composer
        vars:
          CLI_ARGS: install
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: |
            composer update
  composerDump:
    deps:
      - task: composer
        vars:
          CLI_ARGS: install
    sources:
      - ./packages/**/*.php
      - ./app/**/*.php
      - ./config/**/*.php
      - ./database/**/*.php
      - ./public/**/*.php
      - ./resources/**/*.php
      - ./routes/**/*.php
      - ./tests/**/*.php
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: |
            composer dump-autoload
  ecs:
    deps:
      - task: composer
        vars:
          CLI_ARGS: install
    sources:
      - ./packages/**/*.php
      - ./app/**/*.php
      - ./config/**/*.php
      - ./database/**/*.php
      - ./public/**/*.php
      - ./resources/**/*.php
      - ./routes/**/*.php
      - ./tests/**/*.php
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: |
            ./vendor/bin/ecs check -c ./libConfig/ecs.php
  stan:
    deps:
      - task: composer
        vars:
          CLI_ARGS: install
    sources:
      - ./packages/**/*.php
      - ./app/**/*.php
      - ./config/**/*.php
      - ./database/**/*.php
      - ./public/**/*.php
      - ./resources/**/*.php
      - ./routes/**/*.php
      - ./tests/**/*.php
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: |
            ./vendor/bin/phpstan analyze -c libConfig/phpstan.neon

  phpunit:
    deps:
      - task: composer
        vars:
          CLI_ARGS: install
    sources:
      - ./packages/**/*.php
      - ./app/**/*.php
      - ./config/**/*.php
      - ./database/**/*.php
      - ./public/**/*.php
      - ./resources/**/*.php
      - ./routes/**/*.php
      - ./tests/**/*.php
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: |
            ./vendor/bin/phpunit -c ./libConfig/phpunit.xml {{ .CLI_ARGS }}

  runRector:
    deps:
      - task: composer
        vars:
          CLI_ARGS: install
    sources:
      - ./packages/**/*.php
      - ./app/**/*.php
      - ./config/**/*.php
      - ./database/**/*.php
      - ./public/**/*.php
      - ./resources/**/*.php
      - ./routes/**/*.php
      - ./tests/**/*.php
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: |
            ./vendor/bin/rector -c ./libConfig/rector.php

  runEcs:
    deps:
      - task: composer
        vars:
          CLI_ARGS: install
    sources:
      - ./packages/**/*.php
      - ./app/**/*.php
      - ./config/**/*.php
      - ./database/**/*.php
      - ./public/**/*.php
      - ./resources/**/*.php
      - ./routes/**/*.php
      - ./tests/**/*.php
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: |
            ./vendor/bin/ecs check -c ./libConfig/ecs.php --fix

  rectorDryRun:
    deps:
      - task: composer
        vars:
          CLI_ARGS: install
    sources:
      - ./packages/**/*.php
      - ./app/**/*.php
      - ./config/**/*.php
      - ./database/**/*.php
      - ./public/**/*.php
      - ./resources/**/*.php
      - ./routes/**/*.php
      - ./tests/**/*.php
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: |
            ./vendor/bin/rector process --dry-run -c ./libConfig/rector.php
  runLint:
    internal: true
    deps:
      - stan
      - runRector
      - runEcs
  lintCode:
    deps:
      - task: composer
        vars:
          CLI_ARGS: install
    cmds:
      - task: runLint

  ide-helper:
    deps:
      - task: composer
        vars:
          CLI_ARGS: install
    sources:
      - ./packages/**/*.php
      - ./app/**/*.php
      - ./config/**/*.php
      - ./database/**/*.php
      - ./public/**/*.php
      - ./resources/**/*.php
      - ./routes/**/*.php
      - ./tests/**/*.php
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: |
            composer ide-helper

  bucket:
    cmds:
      - |
        {{ .BASE_COMMAND }} run --rm setUpStorage

  ecsOnSave:
    deps:
      - task: composer
        vars:
          CLI_ARGS: install
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: |
            ./vendor/bin/ecs check -c ./libConfig/ecs.php --fix {{ .CLI_ARGS }}

  stanOnSave:
    deps:
      - task: composer
        vars:
          CLI_ARGS: install
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: |
            ./vendor/bin/phpstan analyse -c ./libConfig/phpstan.neon {{ .CLI_ARGS }} --memory-limit=1G

  rectorOnSave:
    deps:
      - task: composer
        vars:
          CLI_ARGS: install
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: |
            ./vendor/bin/rector process -c ./libConfig/rector.php {{ .CLI_ARGS }}

  onSavePHP:
    deps:
      - task: composer
        vars:
          CLI_ARGS: install
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: |
            ./vendor/bin/rector process -c ./libConfig/rector.php {{ .CLI_ARGS }} &&
            ./vendor/bin/ecs check -c ./libConfig/ecs.php --fix {{ .CLI_ARGS }} &&
            ./vendor/bin/phpstan analyse -c ./libConfig/phpstan.neon {{ .CLI_ARGS }} --memory-limit=1G

  composerRefresh:
    cmd: |
      {{ .BASE_COMMAND }} run \
        -v ~/{{ .SSH_PATH }}:/home/{{ .USER_NAME }}/{{ .SSH_PATH }} \
        --rm php-cli sh -c \
        'rm -rf ./vendor && composer clear-cache && composer install'

  deployApache:
    cmd: |
      fly deploy \
        -c fly-apache.toml \
        --app html2 \
        --dockerfile {{ .PHP_DOCKERFILE_PATH }} \
        --build-target flyio \
        --build-arg USER_ID={{ .USER_ID }} \
        --build-arg GROUP_ID={{ .GROUP_ID }} \
        --build-arg USER_NAME={{ .USER_NAME }}

  deployFranken:
    cmd: |
      fly deploy \
        -c fly-franken.toml \
        --app html2 \
        --dockerfile {{ .PHP_DOCKERFILE_PATH }} \
        --build-target frankenphpflyio \
        --build-arg USER_ID={{ .USER_ID }} \
        --build-arg GROUP_ID={{ .GROUP_ID }} \
        --build-arg USER_NAME={{ .USER_NAME }}

  sshFlyIo:
    cmd: fly ssh console -a html2 -u {{ .USER_NAME }}

  run:cmd:
    deps:
      - task: composer
        vars:
          CLI_ARGS: install
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: |
            {{ .CLI_ARGS | default "whoami && pwd" }}

  php:
    deps:
      - task: composer
        vars:
          CLI_ARGS: install
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: |
            php {{ .CLI_ARGS | default "-v" }}

  artisan:
    deps:
      - task: composer
        vars:
          CLI_ARGS: install
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: |
            php artisan {{ .CLI_ARGS | default "-V" }}

  baseCommand:
    requires:
      vars: [
        RUNNING_SERVICE,
        CLI_SERVICE,
        COMMAND_TO_RUN
      ]
    cmds:
      - |
        if [ -f /.dockerenv ] ; then
          {{ .COMMAND_TO_RUN }}
          exit 0
        fi
        if {{ .BASE_COMMAND }} ps {{ .RUNNING_SERVICE }} | grep -q 'Up'; then
          {{ .BASE_COMMAND }} exec -it {{ .RUNNING_SERVICE }} {{ .COMMAND_TO_RUN }}
          exit 0
        fi
        {{ .BASE_COMMAND }} run --rm {{ .CLI_SERVICE }} {{ .COMMAND_TO_RUN }}
