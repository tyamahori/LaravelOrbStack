version: '3'
silent: false
vars:
  COMPOSE_FILE_PATH: .docker/compose.yaml
  PHP_DOCKERFILE_PATH: .docker/php.Dockerfile

  PHP_TAG: laravelorbstack/php-apache:8.4

  BASE_COMMAND: docker compose -f {{ .COMPOSE_FILE_PATH }}

  USER_NAME:
    sh: whoami
  USER_ID:
    sh: id -u
  GROUP_ID:
    sh: id -g
  SSH_PATH: .ssh

tasks:
  default:
    cmds:
      - echo Welcome to LaravelOrbStack Project!! {{ .USER_NAME }}
  info:
    cmds:
      - echo {{ .USER_NAME }}
  removeVendor:
    cmd: rm -rf ./vendor
  buildPhpImageNoCache:
    requires:
      vars: [ CLI_ARGS ]
    cmd: |
      docker build \
        -t {{ .PHP_TAG }} \
        -f {{ .PHP_DOCKERFILE_PATH }} \
        --target={{ .CLI_ARGS | default "local" }} \
        --no-cache \
        --build-arg USER_ID={{ .USER_ID }} \
        --build-arg GROUP_ID={{ .GROUP_ID }} \
        --build-arg USER_NAME={{ .USER_NAME }} \
        .
  buildPhpImage:
    requires:
      vars: [ CLI_ARGS ]
    cmd: |
      docker build \
        -t {{ .PHP_TAG }} \
        -f {{ .PHP_DOCKERFILE_PATH }} \
        --target={{ .CLI_ARGS | default "local" }} \
        --build-arg USER_ID={{ .USER_ID }} \
        --build-arg GROUP_ID={{ .GROUP_ID }} \
        --build-arg USER_NAME={{ .USER_NAME }} \
        .
  pullImages:
    cmd: "{{ .BASE_COMMAND }} pull session cache mailpit mysql postgresql minio mc"
  cleanUpComposeProject:
    cmds:
      - task: removeVendor
      - cmd: "{{ .BASE_COMMAND }} --profile '*' down -v --remove-orphans --rmi all"
  cleanUpComposeProjectVolumes:
    cmds:
      - task: removeVendor
      - cmd: "{{ .BASE_COMMAND }} --profile '*' down -v --remove-orphans"
  cleanUpComposeProjectImages:
    cmds:
      - task: removeVendor
      - cmd: "{{ .BASE_COMMAND }} --profile '*' down --remove-orphans --rmi all"
  buildImages:
    deps:
      - task: buildPhpImage
      - task: pullImages
    cmds:
      - task: images
  ps:
    cmds:
      - "{{ .BASE_COMMAND }} ps -a"
  init:
    deps:
      - task: cleanUpComposeProject
    cmds:
      - task: buildImages
      - task: up
      - task: bucket
      - "{{ .BASE_COMMAND }} exec -it php-app composer install"
      - "{{ .BASE_COMMAND }} exec -it php-app php artisan optimize:clear"
      - "{{ .BASE_COMMAND }} exec -it php-app php artisan migrate:refresh --seed"
      - "{{ .BASE_COMMAND }} exec -it php-app composer ide-helper"
      - "{{ .BASE_COMMAND }} exec -it php-app php -v"
      - "{{ .BASE_COMMAND }} exec -it php-app ./artisan -V"
      - "{{ .BASE_COMMAND }} exec -it php-app whoami"
  start:
    deps:
      - task: cleanUpComposeProjectVolumes
    cmds:
      - task: up
      - task: bucket
      - "{{ .BASE_COMMAND }} exec -it php-app composer install"
      - "{{ .BASE_COMMAND }} exec -it php-app php artisan optimize:clear"
      - "{{ .BASE_COMMAND }} exec -it php-app php artisan migrate:refresh --seed"
      - "{{ .BASE_COMMAND }} exec -it php-app composer ide-helper"
      - "{{ .BASE_COMMAND }} exec -it php-app php -v"
      - "{{ .BASE_COMMAND }} exec -it php-app ./artisan -V"
      - "{{ .BASE_COMMAND }} exec -it php-app whoami"
  images:
    cmds:
      - "docker images"
  upOnCI:
    cmds:
      - task: up
      - task: bucket
      - "{{ .BASE_COMMAND }} exec -it php-app composer install"
      - "{{ .BASE_COMMAND }} exec -it php-app php artisan optimize:clear"
      - "{{ .BASE_COMMAND }} exec -it php-app php artisan migrate:refresh --seed"
      - "{{ .BASE_COMMAND }} exec -it php-app composer ide-helper"
      - "{{ .BASE_COMMAND }} exec -it php-app ./artisan -V"
      - "{{ .BASE_COMMAND }} exec -it php-app whoami"
  down:
    cmds:
      - "{{ .BASE_COMMAND }} --profile '*' down --remove-orphans"
  up:
    deps:
      - task: down
    cmds:
      - "{{ .BASE_COMMAND }} --profile 'app' --profile '' up -d"
  logs:
    cmds:
      - "{{ .BASE_COMMAND }} --profile '*' logs -f"
  deleteVolume:
    cmds:
      - "{{ .BASE_COMMAND }} down -v"
  exec-php-app-as-user:
    cmd: "{{ .BASE_COMMAND }} exec -it php-app bash"
  exec-php-app-as-root:
    cmd: "{{ .BASE_COMMAND }} exec -u root -it php-app bash"

  composer:
    sources:
      - ./composer.json
      - ./composer.lock
    generates:
      - ./vendor/composer/installed.json
      - ./vendor/autoload.php
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: composer {{ .CLI_ARGS | default "-V" }}
    status:
      - test -d ./vendor
  composerUpdate:
    deps:
      - task: composer
        vars:
          CLI_ARGS: install
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: |
            composer update
  composerDump:
    deps:
      - task: composer
        vars:
          CLI_ARGS: install
    sources:
      - ./packages/**/*.php
      - ./app/**/*.php
      - ./config/**/*.php
      - ./database/**/*.php
      - ./public/**/*.php
      - ./resources/**/*.php
      - ./routes/**/*.php
      - ./tests/**/*.php
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: |
            composer dump-autoload
  ecs:
    deps:
      - task: composer
        vars:
          CLI_ARGS: install
    sources:
      - ./packages/**/*.php
      - ./app/**/*.php
      - ./config/**/*.php
      - ./database/**/*.php
      - ./public/**/*.php
      - ./resources/**/*.php
      - ./routes/**/*.php
      - ./tests/**/*.php
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: |
            ./vendor/bin/ecs check -c ./libConfig/ecs.php
  stan:
    deps:
      - task: composer
        vars:
          CLI_ARGS: install
    sources:
      - ./packages/**/*.php
      - ./app/**/*.php
      - ./config/**/*.php
      - ./database/**/*.php
      - ./public/**/*.php
      - ./resources/**/*.php
      - ./routes/**/*.php
      - ./tests/**/*.php
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: |
            ./vendor/bin/phpstan analyze -c libConfig/phpstan.neon

  phpunit:
    deps:
      - task: composer
        vars:
          CLI_ARGS: install
    sources:
      - ./packages/**/*.php
      - ./app/**/*.php
      - ./config/**/*.php
      - ./database/**/*.php
      - ./public/**/*.php
      - ./resources/**/*.php
      - ./routes/**/*.php
      - ./tests/**/*.php
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: |
            ./vendor/bin/phpunit -c ./libConfig/phpunit.xml {{ .CLI_ARGS }}

  runRector:
    deps:
      - task: composer
        vars:
          CLI_ARGS: install
    sources:
      - ./packages/**/*.php
      - ./app/**/*.php
      - ./config/**/*.php
      - ./database/**/*.php
      - ./public/**/*.php
      - ./resources/**/*.php
      - ./routes/**/*.php
      - ./tests/**/*.php
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: |
            ./vendor/bin/rector -c ./libConfig/rector.php

  runEcs:
    deps:
      - task: composer
        vars:
          CLI_ARGS: install
    sources:
      - ./packages/**/*.php
      - ./app/**/*.php
      - ./config/**/*.php
      - ./database/**/*.php
      - ./public/**/*.php
      - ./resources/**/*.php
      - ./routes/**/*.php
      - ./tests/**/*.php
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: |
            ./vendor/bin/ecs check -c ./libConfig/ecs.php --fix

  rectorDryRun:
    deps:
      - task: composer
        vars:
          CLI_ARGS: install
    sources:
      - ./packages/**/*.php
      - ./app/**/*.php
      - ./config/**/*.php
      - ./database/**/*.php
      - ./public/**/*.php
      - ./resources/**/*.php
      - ./routes/**/*.php
      - ./tests/**/*.php
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: |
            ./vendor/bin/rector process --dry-run -c ./libConfig/rector.php
  runLint:
    internal: true
    deps:
      - stan
      - runRector
      - runEcs
  lintCode:
    deps:
      - task: composer
        vars:
          CLI_ARGS: install
    cmds:
      - task: runLint

  ide-helper:
    deps:
      - task: composer
        vars:
          CLI_ARGS: install
    sources:
      - ./packages/**/*.php
      - ./app/**/*.php
      - ./config/**/*.php
      - ./database/**/*.php
      - ./public/**/*.php
      - ./resources/**/*.php
      - ./routes/**/*.php
      - ./tests/**/*.php
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: |
            composer ide-helper

  bucket:
    cmds:
      - "{{ .BASE_COMMAND }} run --entrypoint /bin/sh --rm mc -c '
      mc config host add myminio http://laravelorbstack.storage.local:9000 samplesample samplesample && \
      mc mb myminio/sample-bucket && \
      mc anonymous set public myminio/sample-bucket
      '"

  ecsOnSave:
    deps:
      - task: composer
        vars:
          CLI_ARGS: install
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: |
            ./vendor/bin/ecs check -c ./libConfig/ecs.php --fix {{ .CLI_ARGS }}

  stanOnSave:
    deps:
      - task: composer
        vars:
          CLI_ARGS: install
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: |
            ./vendor/bin/phpstan analyse -c ./libConfig/phpstan.neon {{ .CLI_ARGS }} --memory-limit=1G

  rectorOnSave:
    deps:
      - task: composer
        vars:
          CLI_ARGS: install
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: |
            ./vendor/bin/rector process -c ./libConfig/rector.php {{ .CLI_ARGS }}

  onSavePHP:
    deps:
      - task: composer
        vars:
          CLI_ARGS: install
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: |
            ./vendor/bin/rector process -c ./libConfig/rector.php {{ .CLI_ARGS }} &&
            ./vendor/bin/ecs check -c ./libConfig/ecs.php --fix {{ .CLI_ARGS }} &&
            ./vendor/bin/phpstan analyse -c ./libConfig/phpstan.neon {{ .CLI_ARGS }} --memory-limit=1G

  composerRefresh:
    cmds:
      - "{{ .BASE_COMMAND }} run -v ~/{{ .SSH_PATH }}:/home/{{ .USER_NAME }}/{{ .SSH_PATH }} --rm php-cli sh -c 'rm -rf ./vendor && composer clear-cache && composer install'"

  deployFlyIo:
    cmd: |
      fly deploy \
        --app html2 \
        --dockerfile {{ .PHP_DOCKERFILE_PATH }} \
        --build-target flyio \
        --build-arg USER_ID={{ .USER_ID }} \
        --build-arg GROUP_ID={{ .GROUP_ID }} \
        --build-arg USER_NAME={{ .USER_NAME }}

  sshFlyIo:
    cmd: fly ssh console

  run:cmd:
    deps:
      - task: composer
        vars:
          CLI_ARGS: install
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: |
            {{ .CLI_ARGS | default "whoami && pwd" }}

  php:
    deps:
      - task: composer
        vars:
          CLI_ARGS: install
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: |
            php {{ .CLI_ARGS | default "-v" }}

  artisan:
    deps:
      - task: composer
    cmds:
      - task: baseCommand
        vars:
          RUNNING_SERVICE: php-app
          CLI_SERVICE: php-cli
          COMMAND_TO_RUN: |
            php artisan {{ .CLI_ARGS | default "-V" }}

  baseCommand:
    requires:
      vars: [
        RUNNING_SERVICE,
        CLI_SERVICE,
        COMMAND_TO_RUN
      ]
    cmds:
      - |
        if [ -f /.dockerenv ] ; then
          {{ .COMMAND_TO_RUN }}
          exit 0
        fi
        if {{ .BASE_COMMAND }} ps {{ .RUNNING_SERVICE }} | grep -q 'Up'; then
          {{ .BASE_COMMAND }} exec -it {{ .RUNNING_SERVICE }} {{ .COMMAND_TO_RUN }}
          exit 0
        fi
        {{ .BASE_COMMAND }} run --rm {{ .CLI_SERVICE }} {{ .COMMAND_TO_RUN }}
