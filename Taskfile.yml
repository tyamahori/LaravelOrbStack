version: '3'
vars:
  USER_NAME:
    sh: whoami
  USER_ID:
    sh: id -u
  GROUP_ID:
    sh: id -g
  BASE_COMMAND:
    docker compose -f .docker/local/compose.yaml
  BUILD_BASE_COMMAND:
    USER_ID={{ .USER_ID }} GROUP_ID={{ .GROUP_ID }} USER_NAME={{ .USER_NAME }} docker compose -f .docker/local/compose.build.yaml
silent: true

tasks:
  default:
    cmds:
      - echo Welcome to LaravelOrbStack Project!! {{ .USER_NAME }}
  info:
    cmds:
      - echo {{ .USER_NAME }}
  removeVendor:
    cmd: rm -rf ./vendor
  cleanUp:
    cmds:
      - cmd: "{{ .BASE_COMMAND }} --profile '*' down -v --remove-orphans"
      - cmd: "{{ .BUILD_BASE_COMMAND }} --profile 'build' down --rmi all"
      - cmd: "docker images laravelorbstack"
  build:
    silent: false
    cmds:
      - task: cleanUp
      - cmd: "{{ .BUILD_BASE_COMMAND }} --profile 'build' build --no-cache"
      - cmd: "docker images laravelorbstack"
  buildOnCI:
    cmds:
      - cmd: "{{ .BUILD_BASE_COMMAND }} --profile 'build' build"
      - cmd: "{{ .BASE_COMMAND }} pull redis localstack mailpit mysql postgresql"
      - cmd: "docker images laravelorbstack"
  ps:
    cmds:
      - "{{ .BASE_COMMAND }} ps -a"
  init:
    silent: false
    deps:
      - task: build
    cmds:
      - task: up
      - task: bucket
      - "{{ .BASE_COMMAND }} exec -it php-app composer install"
      - "{{ .BASE_COMMAND }} exec -it php-app php artisan optimize:clear"
      - "{{ .BASE_COMMAND }} exec -it php-app php artisan migrate:refresh --seed"
      - "{{ .BASE_COMMAND }} exec -it php-app composer ide-helper"
      - "{{ .BASE_COMMAND }} exec -it php-app ./artisan -V"
      - "{{ .BASE_COMMAND }} exec -it php-app whoami"
  images:
    silent: false
    cmds:
      - "{{ .BASE_COMMAND }} images"
  upOnCI:
    silent: false
    cmds:
      - task: up
      - task: bucket
      - "{{ .BASE_COMMAND }} exec -it php-app composer install"
      - "{{ .BASE_COMMAND }} exec -it php-app php artisan optimize:clear"
      - "{{ .BASE_COMMAND }} exec -it php-app php artisan migrate:refresh --seed"
      - "{{ .BASE_COMMAND }} exec -it php-app composer ide-helper"
      - "{{ .BASE_COMMAND }} exec -it php-app ./artisan -V"
      - "{{ .BASE_COMMAND }} exec -it php-app whoami"
  down:
    cmds:
      - "{{ .BASE_COMMAND }} --profile '*' down --remove-orphans"
  up:
    deps:
      - task: down
    cmds:
      - "{{ .BASE_COMMAND }} --profile 'app' --profile '' up -d"
  logs:
    cmds:
      - "{{ .BASE_COMMAND }} --profile '*' logs -f"
  deleteVolume:
    cmds:
      - "{{ .BASE_COMMAND }} down -v"
  exec-php-app-as-user:
    cmd: "{{ .BASE_COMMAND }} exec -it php-app bash"
  exec-php-franken-as-user:
    cmd: "{{ .BASE_COMMAND }} exec -it php-franken bash"
  exec-php-app-as-root:
    cmd: "{{ .BASE_COMMAND }} exec -u root -it php-app bash"
  exec-php-franken-as-root:
    cmd: "{{ .BASE_COMMAND }} exec -u root -it php-franken bash"
  composer:
    sources:
      - ./composer.json
      - ./composer.lock
    generates:
      - ./vendor/composer/installed.json
      - ./vendor/autoload.php
    cmds:
      - "{{ .BASE_COMMAND }} run --rm php-cli composer install"
    status:
      - test -d ./vendor
  composerUpdate:
    cmds:
      - "{{ .BASE_COMMAND }} run --rm php-cli composer update"
  composerDump:
    deps:
      - task: composer
    sources:
      - ./packages/**/*.php
      - ./app/**/*.php
      - ./config/**/*.php
      - ./database/**/*.php
      - ./public/**/*.php
      - ./resources/**/*.php
      - ./routes/**/*.php
      - ./tests/**/*.php
    cmds:
      - "{{ .BASE_COMMAND }} run --rm php-cli composer dump-autoload"
  ecs:
    deps:
      - task: composer
    sources:
      - ./packages/**/*.php
      - ./app/**/*.php
      - ./config/**/*.php
      - ./database/**/*.php
      - ./public/**/*.php
      - ./resources/**/*.php
      - ./routes/**/*.php
      - ./tests/**/*.php
    cmds:
      - "{{ .BASE_COMMAND }} run --rm php-cli ./vendor/bin/ecs"
  stan:
    deps:
      - task: composer
    sources:
      - ./packages/**/*.php
      - ./app/**/*.php
      - ./config/**/*.php
      - ./database/**/*.php
      - ./public/**/*.php
      - ./resources/**/*.php
      - ./routes/**/*.php
      - ./tests/**/*.php
    cmds:
      - "{{ .BASE_COMMAND }} run --rm php-cli ./vendor/bin/phpstan"
  phpunit:
    deps:
      - task: composer
    sources:
      - ./packages/**/*.php
      - ./app/**/*.php
      - ./config/**/*.php
      - ./database/**/*.php
      - ./public/**/*.php
      - ./resources/**/*.php
      - ./routes/**/*.php
      - ./tests/**/*.php
    cmds:
      - "{{ .BASE_COMMAND }} run --rm php-cli ./vendor/bin/phpunit"
  rector:
    deps:
      - task: composer
    sources:
      - ./packages/**/*.php
      - ./app/**/*.php
      - ./config/**/*.php
      - ./database/**/*.php
      - ./public/**/*.php
      - ./resources/**/*.php
      - ./routes/**/*.php
      - ./tests/**/*.php
    cmd: "{{ .BASE_COMMAND }} run --rm php-cli ./vendor/bin/rector"
  rectorDryRun:
    deps:
      - task: composer
    sources:
      - ./packages/**/*.php
      - ./app/**/*.php
      - ./config/**/*.php
      - ./database/**/*.php
      - ./public/**/*.php
      - ./resources/**/*.php
      - ./routes/**/*.php
      - ./tests/**/*.php
    cmd: "{{ .BASE_COMMAND }} run --rm php-cli ./vendor/bin/rector --dry-run"
  lint:
    deps:
      - rector
      - stan
      - ecs
  ide-helper:
    deps:
      - task: composer
    sources:
      - ./packages/**/*.php
      - ./app/**/*.php
      - ./config/**/*.php
      - ./database/**/*.php
      - ./public/**/*.php
      - ./resources/**/*.php
      - ./routes/**/*.php
      - ./tests/**/*.php
    cmd: "{{ .BASE_COMMAND }} run --rm php-cli composer ide-helper"
  bucket:
    cmds:
      - "{{ .BASE_COMMAND }} exec minio bash -c
      'mc config host add myminio http://minio:9000 samplesample samplesample &&
       mc mb myminio/sample-bucket &&
       mc anonymous set public myminio/sample-bucket
       '
      "
  ecsOnSave:
    silent: false
    requires:
      vars: [ CLI_ARGS ]
    cmds:
      - cmd: "{{ .BASE_COMMAND }} run --rm php-cli ./vendor/bin/ecs check --fix {{ .CLI_ARGS }}"
  stanOnSave:
    silent: false
    requires:
      vars: [ CLI_ARGS ]
    cmds:
      - cmd: "{{ .BASE_COMMAND }} run --rm php-cli ./vendor/bin/phpstan analyse -c phpstan.neon {{ .CLI_ARGS }} --memory-limit=1G"
  rectorOnSave:
    silent: false
    requires:
      vars: [ CLI_ARGS ]
    cmds:
      - cmd: "{{ .BASE_COMMAND }} run --rm php-cli ./vendor/bin/rector process {{ .CLI_ARGS }}"
  onSavePHP:
    silent: false
    deps:
      - ecsOnSave
      - stanOnSave
      - rectorOnSave
  cli:
    silent: false
    requires:
      vars: [ CLI_ARGS ]
    cmds:
      - cmd: "{{ .BASE_COMMAND }} run --rm php-cli {{ .CLI_ARGS }}"
