name: laravelorbstack
x-common-settings: &healthcheck-settings
  interval: 1s
  timeout: 30s
  retries: 30

services:
  postgresql:
    networks:
      default:
        aliases:
          - laravelorbstack.pgsql.local
    image: postgres:17.4-alpine3.21
    container_name: laravelorbstack-postgresql
    environment:
      POSTGRES_DB: sample
      POSTGRES_USER: sample
      POSTGRES_PASSWORD: sample
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
    volumes:
      - type: volume
        source: postgresql
        target: /var/lib/postgresql/data
      - type: bind
        source: ./local/db/script.sql
        target: /docker-entrypoint-initdb.d/script.sql
    healthcheck:
      test: [
        "CMD",
        "pg_isready",
        "-h",
        "laravelorbstack.pgsql.local",
        "-U",
        "sample",
        "-d",
        "sample",
        "-p",
        "5432",
      ]
      <<: *healthcheck-settings

  mysql:
    networks:
      default:
        aliases:
          - laravelorbstack.mysql.local
    image: mysql:9.3.0
    container_name: laravelorbstack-mysql
    environment:
      MYSQL_ROOT_PASSWORD: sample
      MYSQL_DATABASE: sample
      MYSQL_USER: sample
      MYSQL_PASSWORD: sample
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - type: volume
        source: mysql
        target: /var/lib/mysql
    healthcheck:
      test: [
        "CMD",
        "mysqladmin",
        "ping",
        "-h",
        "laravelorbstack.mysql.local",
        "-u",
        "sample",
        "-psample",
        "-P",
        "3306",
      ]
      <<: *healthcheck-settings

  cache:
    networks:
      default:
        aliases:
          - laravelorbstack.cache.local
    image: redis:8.0-M04-alpine
    container_name: laravelorbstack-cache
    command: redis-server --appendonly yes
    volumes:
      - type: volume
        source: cache
        target: /data
    healthcheck:
      test: [
        "CMD",
        "redis-cli",
        "ping"
      ]
      <<: *healthcheck-settings

  session:
    networks:
      default:
        aliases:
          - laravelorbstack.session.local
    image: redis:8.0-M04-alpine
    container_name: laravelorbstack-session
    command: redis-server --appendonly yes
    volumes:
      - type: volume
        source: session
        target: /data
    healthcheck:
      test: [
        "CMD",
        "redis-cli",
        "ping"
      ]
      <<: *healthcheck-settings

  mailpit:
    networks:
      default:
        aliases:
          - laravelorbstack.mail.local
    image: axllent/mailpit:v1.24.1
    container_name: laravelorbstack-mailpit
    healthcheck:
      test: [
        "CMD",
        "ping",
        "-c",
        "3",
        "laravelorbstack.mail.local"
      ]
      <<: *healthcheck-settings

  minio:
    networks:
      default:
        aliases:
          - laravelorbstack.storage.local
          - sample-bucket.laravelorbstack.storage.local
    labels:
      dev.orbstack.domains: sample-bucket.laravelorbstack.storage.local,laravelorbstack.storage.local
    image: minio/minio:RELEASE.2025-04-08T15-41-24Z
    container_name: laravelorbstack-minio
    command: server /export --console-address ":80"
    volumes:
      - type: volume
        source: minio
        target: /export
      - type: volume
        source: minio-config
        target: /root/.minio
    environment:
      # @see https://min.io/docs/minio/linux/reference/minio-server/settings/core.html#domain
      MINIO_DOMAIN: laravelorbstack.storage.local
      MINIO_ROOT_USER: samplesample
      MINIO_ROOT_PASSWORD: samplesample
    healthcheck:
      test: [
        "CMD",
        "curl",
        "-I",
        "laravelorbstack.storage.local/minio/health/live"
      ]
      <<: *healthcheck-settings

  mc:
    image: minio/mc:RELEASE.2025-04-08T15-39-49Z
    depends_on:
      minio:
        condition: service_healthy
    profiles:
      - bucket

#  localstack:
#    networks:
#      default:
#        aliases:
#          - laravelorbstack.localstack.local
#    image: localstack/localstack:2.2.0
#    container_name: laravelorbstack-localstack
#    environment:
#      SERVICES: s3
#    healthcheck:
#      test: [
#        "CMD",
#        "bash",
#        "-c",
#        "awslocal s3 ls"
#      ]
#    volumes:
#      - type: bind
#        source: ./local/s3
#        target: /etc/localstack/init/ready.d
#      - type: bind
#        source: /var/run/docker.sock
#        target: /var/run/docker.sock
#      - type: volume
#        source: localstack
#        target: /var/lib/localstack

  php-app:
    networks:
      default:
        aliases:
          - laravelorbstack.apache.local
    hostname: php-app
    image: laravelorbstack/php-apache:8.4
    container_name: laravelorbstack-php
    volumes:
      - type: bind
        source: ..
        target: /var/www/html
      - type: bind
        source: ./local/php/mpm_prefork.conf
        target: /etc/apache2/mods-available/mpm_prefork.conf
      - type: bind
        source: ./local/php/000-default.conf
        target: /etc/apache2/sites-available/000-default.conf
      - type: bind
        source: ./common/security.conf
        target: /etc/apache2/conf-available/security.conf
      - type: bind
        source: ./local/php/php.ini
        target: /usr/local/etc/php/php.ini
      - type: bind
        source: ./local/php/docker-php-ext-xdebug.ini
        target: /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    # .env.appをコンテナの環境変数に設定するようにしている。設定を変更する場合は、
    # 設定を変える場合は.env.appの内容を修正し、コンテナを再起動すること
    env_file: local/php/.env.app
    depends_on:
      postgresql:
        condition: service_healthy
      mysql:
        condition: service_healthy
      cache:
        condition: service_healthy
      session:
        condition: service_healthy
      mailpit:
        condition: service_healthy
      minio:
        condition: service_healthy
#      localstack:
#        condition: service_healthy
    profiles:
      - customImage
      - app

  php-franken:
    networks:
      default:
        aliases:
          - laravelorbstack.franken.local
    hostname: php-franken
    image: laravelorbstack/franken-php:php84
    container_name: laravelorbstack-frankenphp
    volumes:
      - type: bind
        source: ..
        target: /app
      - type: volume
        source: caddy-data
        target: /data
      - type: volume
        source: caddy-config
        target: /config
      - type: bind
        source: ./local/php/php.ini
        target: /usr/local/etc/php/php.ini
      - type: bind
        source: ./local/php/docker-php-ext-xdebug-franken.ini
        target: /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    env_file: local/php/.env.franken
    depends_on:
      postgresql:
        condition: service_healthy
      mysql:
        condition: service_healthy
      cache:
        condition: service_healthy
      session:
        condition: service_healthy
      mailpit:
        condition: service_healthy
      minio:
        condition: service_healthy
    profiles:
      - customImage
      - app

  php-cli:
    env_file: local/php/.env.app
    image: laravelorbstack/php-apache:8.4
    volumes:
      - type: bind
        source: ..
        target: /var/www/html
      - type: bind
        source: ./local/php/000-default.conf
        target: /etc/apache2/sites-available/000-default.conf
      - type: bind
        source: ./local/php/mpm_prefork.conf
        target: /etc/apache2/mods-available/mpm_prefork.conf
      - type: bind
        source: ./local/php/php.ini
        target: /usr/local/etc/php/php.ini
      - type: bind
        source: ./local/php/docker-php-ext-xdebug.ini
        target: /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    profiles:
      - customImage
      - cli
  balancer:
    networks:
      default:
        aliases:
          - frankenphp.local
          - apachephp.local
    hostname: balancer
    image: nginx:1.28.0
    container_name: laravelorbstack-balancer
    volumes:
      - type: bind
        source: ./local/lb/default.conf
        target: /etc/nginx/conf.d/default.conf
    depends_on:
      php-app:
        condition: service_started
    labels:
      dev.orbstack.domains: frankenphp.local,apachephp.local
    profiles:
      - app

volumes:
  postgresql:
  mysql:
  cache:
  session:
  minio:
  minio-config:
  caddy-data:
  caddy-config:
#  localstack:
